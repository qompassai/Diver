//neoconf.json
{
  "bashls": {
    "autostart": true
  },
  "clangd": {
    "autostart": true,
    "cmd": [
      "clangd",
      "--background-index",
      "--clang-tidy"
    ]
  },
  "conform": {
    "formatters_by_ft": {
      "css": [
        "prettierd",
        "prettier",
        "stylelint"
      ],
      "html": [
        "prettierd",
        "prettier"
      ],
      "markdown": [
        "prettier",
        "markdownlint"
      ],
      "rust": [
        "rustfmt"
      ],
      "scss": [
        "prettierd",
        "prettier",
        "stylelint"
      ],
      "toml": [
        "taplo"
      ]
    }
  },
  "cssls": {
    "autostart": true,
    "lint": {
      "argumentsInColorFunction": "error",
      "boxModel": "warning",
      "compatibleVendorPrefixes": "warning",
      "duplicateProperties": "warning",
      "importStatement": "warning"
    },
    "validate": {
      "enable": true,
      "less": true,
      "scss": true
    }
  },
  "diagnostics": {
    "severity_sort": true,
    "signs": true,
    "underline": true,
    "virtual_text": true
  },
  "emmet_ls": {
    "autostart": true,
    "filetypes": [
      "html",
      "css",
      "scss",
      "less",
      "markdown"
    ]
  },
  "html": {
    "autostart": true,
    "autoClosingTags": true,
    "filetypes": [
      "html",
      "htmldjango"
    ],
    "format": {
      "contentUnformatted": [
        "pre",
        "code",
        "textarea",
        "super"
      ],
      "enable": true,
      "indentHandlebars": true,
      "indentInnerHtml": true
    },
    "validate": {
      "scripts": true,
      "styles": true
    }
  },
  "jsonls": {
  "autostart": true,
  "schemas": [
    {
      "fileMatch": [".luarc.json", ".luarc.jsonc"],
      "url": "https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/luarc.json"
    }
  ]
  },
  "lazydev": {
    "integrations": {
      "cmp": true,
      "coq": true,
      "lspconfig": true,
      "luasnip": true,
      "treesitter": true
    },
    "library": {
      "enabled": true,
      "plugins": [
        {
          "name": "ansible-vim"
        },
        {
          "name": "blink.cmp"
        },
        {
          "name": "catppuccin"
        },
        {
          "name": "cmp-nvim-lsp"
        },
        {
          "name": "conform.nvim"
        },
        {
          "name": "lazy.nvim"
        },
        {
          "name": "lazydev.nvim"
        },
        {
          "name": "lualine.nvim"
        },
        {
          "name": "luasnip",
          "setup": {
            "build_jsregexp": true
          }
        },
        {
          "name": "luarocks"
        },
        {
          "name": "mason-lspconfig.nvim"
        },
        {
          "name": "mason-tool-installer.nvim"
        },
        {
          "name": "mason.nvim"
        },
        {
          "name": "mini.nvim"
        },
        {
          "name": "neoconf.nvim"
        },
        {
          "name": "noice.nvim"
        },
        {
          "name": "none-ls.nvim"
        },
        {
          "name": "nvim-cmp"
        },
        {
          "name": "nvim-lspconfig"
        },
        {
          "name": "nvim-metals"
        },
        {
          "name": "nvim-treesitter"
        },
        {
          "name": "plenary.nvim"
        },
        {
          "name": "rustaceanvim"
        },
        {
          "name": "SchemaStore.nvim"
        },
        {
          "name": "telescope.nvim"
        },
        {
          "name": "trouble.nvim"
        },
        {
          "name": "which-key.nvim"
        }
      ]
    },
    "types": true
  },
  "lua_ls": {
    "autostart": true,
    "Lua": {
      "completion.callSnippet": "Replace",
      "diagnostics.disable": [
        "missing-fields"
      ],
      "diagnostics.globals": [
        "vim",
        "jit"
      ],
      "format": {
        "enable": true
      },
      "hint.enable": true,
      "runtime.version": "LuaJIT",
      "telemetry.enable": false,
      "workspace.checkThirdParty": true,
      "workspace.library": [
        "${3rd}/luv/library",
        "${3rd}/luasnip/lua",
        "${VIMRUNTIME}/lua",
        "/home/phaedrus/.luarocks/share/lua/5.1"
      ],
      "workspace.maxPreload": 2000,
      "workspace.preloadFileSize": 1000
    }
  },
  "luacheck": {
    "autostart": true
  },
  "marksman": {
    "autostart": true
  },
  "mojo": {
    "autostart": true,
    "filetypes": [
      "mojo",
      "ðŸ”¥"
    ],
    "settings": {
      "mojo": {
        "enableCompletion": true,
        "enableDefinition": true,
        "enableHover": true,
        "formatting": {
          "provider": "black"
        },
        "importStrategy": "fromEnvironment",
        "pythonPath": "python3",
        "sdkPath": "${env:MODULAR_HOME}/pkg/mojo"
      }
    }
  },
  "nil": {
    "autostart": true
  },
  "null-ls": {
    "sources": [
      "require('none-ls.diagnostics.eslint')",
      "require('none-ls-jsonlint.diagnostics.jsonlint')"
    ]
  },
  "neoconf.enable": true,
  "neoconf.rootMarkers": [
    ".git",
    "neoconf.json"
  ],
  "pyright": {
    "python.analysis.typeCheckingMode": "basic"
  },
  "ruff_lsp": {
    "autostart": true
  },
  "rust_analyzer": {
    "autostart": true,
    "cargo": {
      "allFeatures": true,
      "buildScripts": {
        "enable": true
      },
      "features": "all"
    },
    "checkOnSave": {
      "command": "clippy"
    },
    "diagnostics": {
      "enable": true,
      "experimental": {
        "enable": true
      }
    },
    "inlayHints": {
      "bindingModeHints": {
        "enable": true
      },
      "chainingHints": {
        "enable": true
      },
      "parameterHints": {
        "enable": true
      },
      "typeHints": {
        "enable": true
      }
    },
    "lens": {
      "enable": true,
      "enumVariantReferences": true,
      "methodReferences": true,
      "references": true
    },
    "procMacro": {
      "enable": true
    }
  },
  "shell": {
    "detect_shebang": true
  },
  "sqlls": {
    "autostart": true
  },
  "sqls": {
    "autostart": true
  },
  "stylua": {
    "autostart": true
  },
  "supermarkdown": {
    "autostart": true
  },
  "tailwindcss": {
    "autostart": true,
    "emmetCompletions": true,
    "experimental": {
      "classRegex": [
        [
          "cva\\(([^)]*)\\)",
          "[\"'`]([^\"'`]*).*?[\"'`]"
        ]
      ]
    },
    "includeLanguages": {
      "markdown": "html",
      "mdx": "html"
    }
  },
  "tsserver": {
    "autostart": true
  },
  "zls": {
    "autostart": true
  }
}

