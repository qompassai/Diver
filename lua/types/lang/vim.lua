-- /qompassai/Diver/lua/types/vim.lua
-- Qompass AI Diver Vim Types
-- Copyright (C) 2025 Qompass AI, All rights reserved
------------------------------------------------------
---@meta

---@class vim
---@field api VimNativeAPI
---@field bo table<string, any>
---@field diagnostic vim.diagnostic
---@field env table<string, string>
---@field filetype vim.filetype
---@field fn FunctionAPI
---@field lsp vim.lsp
---@field log vim.log
---@field loop vim.loop
---@field o table<string, any>
---@field opt table
---@field opt_local vim.opt_local
---@field uv table
---@field wo table<string, any>
---@class vim.api
---@field nvim_buf_create_user_command fun(buffer: integer, name: string, command: string, opts: table)
---@class vim.diagnostic
---@field reset fun()
---@class vim.filetype
---@field add fun(config: table)
---@class vim.fn
---@field executable fun(name:string):boolean
---@field expand fun(path:string):string
---@field has fun(feature:string):boolean
---@field stdpath fun(type:string):string
---@class vim.loop
---@field available_parallelism fun(): integer
---@class vim.lsp
---@field buf_document_highlight fun()
---@field buf_format fun(opts: table)
---@field buf_semantic_tokens_refresh fun()
---@field get_clients fun(opts: table): table[]
---@class vim.log
---@field levels table
---@class vim.opt_local
---@field autoindent boolean
---@field expandtab boolean
---@field shiftwidth integer
---@field smartindent boolean
---@field softtabstop integer
---@field tabstop integer
---@class VimNativeAPI
---@field nvim_create_augroup fun(name:string, opts:table):integer
---@field nvim_create_autocmd fun(event:any, opts:table)
---@field nvim_get_runtime_file fun(pattern:string, all:boolean):string[]
---@field nvim_set_option_value fun(name:string, value:any, opts:table)
